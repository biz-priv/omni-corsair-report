service: omni-dw-corsair

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 128 
  timeout: 600
  role : ${ssm:/omni-dw/${self:provider.stage}/lambda/role}
  environment:
    stage: ${self:provider.stage}

custom:
  prune:
    automatic: true
    number: 3

package:
  individually: true
  excludeDevDependencies: false
  exclude:
    - 'node_modules/**'
    - 'config/**'
    - 'src/**'
    - '*.*'
functions:
    - ${file(config/corsairReport.yml)}
alarms:
  - cloudwatchLog:
      logGroupName: "/aws/lambda/${self:service}-${self:provider.stage}-SendReport"
      filterPattern: "ERROR"
      metricName: "ErrorCount"
      threshold: 1
      evaluationPeriods: 1
      comparisonOperator: "GreaterThanOrEqualToThreshold"
      namespace: "AWS/Lambda"
      dimensions:
        - Name: "FunctionName"
          Value: "${self:service}-${self:provider.stage}-SendReport"
      alarmName: "corsair-reports-lambda-error-alarm"
      treatMissingData: "missing"
      period: 60
      statistic: "Sum"
      actionsEnabled: true
      alarmActions:
        - ${ssm:/omni-reports/${self:provider.stage}/error-notification/sns/arn}

plugins:
  - serverless-offline
  - serverless-prune-plugin

layers:
  commonLibs:
    path: lib
    name: omni-dw-corsair-${self:provider.stage}
    compatibleRuntimes:
      - nodejs18.x
    package:     
      include:
        - node_modules/**
